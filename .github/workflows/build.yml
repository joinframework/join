name: build

on:
  workflow_call:
    inputs:
      scan:
        type: boolean
        default: false

      coverage:
        type: boolean
        default: false

      doc:
        type: boolean
        default: false

  workflow_dispatch:
    inputs:
      scan:
        type: boolean
        default: false

      coverage:
        type: boolean
        default: false

      doc:
        type: boolean
        default: false

jobs:
  build:
    runs-on: ubuntu-latest

    container:
      image: joinframework/join-ci:latest
      options: --privileged --sysctl net.ipv6.conf.all.disable_ipv6=0

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Configure
        run: cmake -B build -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Debug -DJOIN_ENABLE_COVERAGE=ON -DJOIN_ENABLE_TESTS=ON

      - name: Initialize codeql
        if: ${{ inputs.scan }}
        uses: github/codeql-action/init@v2.22.0

      - name: Build
        if: ${{ inputs.scan || inputs.coverage }}
        run: cmake --build build --config Debug

      - name: Perform codeql analysis
        if: ${{ inputs.scan }}
        uses: github/codeql-action/analyze@v2.22.0

      - name: Perform codacy analysis
        if: ${{ inputs.scan }}
        uses: codacy/codacy-analysis-cli-action@v4.4.5
        with:
          project-token: ${{secrets.CODACY_PROJECT_TOKEN}}
          verbose: true
          output: results.sarif
          format: sarif
          gh-code-scanning-compat: true
          max-allowed-issues: 2147483647

      - name: Upload codacy scan report to github
        if: ${{ inputs.scan }}
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif

      - name: Run tests
        if: ${{ inputs.coverage }}
        run: ctest --test-dir build --output-on-failure -C Debug

      - name: Generate coverage report
        if: ${{ inputs.coverage }}
        run: |
          lcov --directory . --capture --output-file lcov.info
          lcov --remove lcov.info "*/build/*" "*/tests/*" "/usr/include/*" --output-file lcov.info

      - name: Upload coverage report to coveralls
        if: ${{ inputs.coverage }}
        uses: coverallsapp/github-action@v2.3.6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          file: lcov.info

      - name: Upload coverage report to codecov
        if: ${{ inputs.coverage }}
        uses: codecov/codecov-action@v5.4.3
        with:
          fail_ci_if_error: true
          token: ${{secrets.CODECOV_TOKEN}}
          functionalities: fixes
          flags: unittests
          file: lcov.info

      - name: Upload coverage report to codacy
        if: ${{ inputs.coverage }}
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{secrets.CODACY_PROJECT_TOKEN}}
          coverage-reports: lcov.info

      - name: Run doxygen
        if: ${{ inputs.doc }}
        uses: mattnotmitt/doxygen-action@v1.12.0
        with:
          doxyfile-path: ./doxyfile
          working-directory: .

      - name: Upload documentation
        if: ${{ inputs.doc }}
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: ./doc/html

      - name: Cleanup
        if: always()
        run: rm -rf $GITHUB_WORKSPACE/*

  deploy:
    if: ${{ inputs.doc }}

    needs: build

    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5
